name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up .NET for C# projects
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    # Build C# projects
    - name: Build C# projects
      run: |
        for csproj in $(find assign6_2 -name "*.cs"); do
          dotnet build "$csproj" --configuration Release -o output/csharp
        done

    # Compile Kotlin projects
    - name: Compile Kotlin projects
      run: |
        mkdir -p output/kotlin
        for ktfile in $(find assign6_2 -name "*.kt"); do
          kotlinc "$ktfile" -include-runtime -d "output/kotlin/$(basename ${ktfile%.kt}.jar)"
        done

    # Compile C++ projects
    - name: Compile C++ projects
      run: |
        mkdir -p output/cpp
        for cppfile in $(find assign6_2 -name "*.cpp"); do
          g++ "$cppfile" -o "output/cpp/$(basename ${cppfile%.cpp})"
        done

    # Compile Python scripts
    - name: Compile Python scripts
      run: |
        mkdir -p output/python
        for pyfile in $(find assign6_2 -name "*.py"); do
          python3 -m py_compile "$pyfile"
          cp "${pyfile}c" "output/python/$(basename ${pyfile}c)"
        done

    # Create a zip file of all compiled outputs
    - name: Create release archive
      run: |
        zip -r release.zip output

    # Create a GitHub release and upload the zip file
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Release v1.0.${{ github.run_number }}
        body: |
          This release contains the compiled outputs of all projects in assign6_2.
        draft: false
        prerelease: false
        files: release.zip