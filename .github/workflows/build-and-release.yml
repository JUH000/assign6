name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # === C++ 컴파일 ===
    - name: Compile C++ files
      run: |
        mkdir -p build/cpp
        for file in cpp/*.cpp; do
          filename=$(basename "$file" .cpp)
          g++ "$file" -o "build/cpp/${filename}"
        done

    # === C# 컴파일 ===
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Compile C# files
      run: |
        mkdir -p build/csharp
        for file in csharp/*.cs; do
          filename=$(basename "$file" .cs)
          mcs "$file" -out:"build/csharp/${filename}.exe"
        done

    # === Kotlin 컴파일 ===
    - name: Setup Kotlin
      run: |
        sudo apt-get update
        sudo apt-get install -y default-jdk unzip
        curl -s https://get.sdkman.io | bash
        source "$HOME/.sdkman/bin/sdkman-init.sh"
        sdk install kotlin

    - name: Compile Kotlin files
      run: |
        mkdir -p build/kotlin
        for file in kotlin/*.kt; do
          filename=$(basename "$file" .kt)
          kotlinc "$file" -include-runtime -d "build/kotlin/${filename}.jar"
        done

    # === 압축 및 릴리즈 ===
    - name: Zip build outputs
      run: |
        zip -r build-artifacts.zip build

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: "Auto Release - ${{ github.sha }}"
        tag_name: "release-${{ github.sha }}"
        files: build-artifacts.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
